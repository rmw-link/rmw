// Generated by CoffeeScript 2.5.1
var Hash;

Hash = class Hash {
  constructor($key, $) {
    this.$key = $key;
    this.$ = $;
  }

};

export default (key, redis) => {
  var hash;
  hash = new Hash(key, redis);
  return new Proxy(hash, {
    get: (self, attr) => {
      if (attr.charAt(0) === "$") {
        return self[attr];
      }
      return self.$.hget(self.$key, attr);
    },
    set: (self, attr, val) => {
      if (attr.charAt(0) === "$") {
        self[attr] = val;
      } else {
        self.$.hset(self.$key, attr, val);
      }
      return true;
    },
    deleteProperty: (self, attr) => {
      return self.$.hdel(self.$key, attr);
    },
    has: (self, attr) => {
      return self.$.hexists(self.$key, attr);
    },
    enumerate: (self) => {
      return self.$.hgetall(self.$key);
    }
  });
};

//# sourceMappingURL=hash.js.map
